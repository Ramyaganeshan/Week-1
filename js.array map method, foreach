map() creates a new array from calling a function for every array element.
map() does not execute the function for empty elements.
map() does not change the original array.


Return a new array with the square root of all element values:
const numbers = [4, 9, 16, 25];
const newArr = numbers.map(Math.sqrt)

Multiply all the values in an array with 10:
const numbers = [65, 44, 12, 4];
const newArr = numbers.map(myFunction)
function myFunction(num) {
  return num * 10;
}


map() method in JavaScript creates an array by calling a specific function on each element present in the parent array.
It is a non-mutating method. 
Generally, the map() method is used to iterate over an array and calling function on every element of the array.


Example:
<html>
<body>
<h1>JavaScript Arrays</h1>
<h2>The map() Method</h2>
<p>Create a new array by performing a function on each array element:</p>
<p id="demo"></p>

<script>
const numbers1 = [45, 4, 9, 16, 25];
const numbers2 = numbers1.map(myFunction);

document.getElementById("demo").innerHTML = numbers2;

function myFunction(value, index, array) {
  return value * 2;
}
</script>

</body>
</html>
___________________________________________________________________________________________

Array.forEach():

The forEach() method calls a function (a callback function) once for each array element.
































