JavaScript Output:-
JavaScript Display Possibilities
JavaScript can "display" data in different ways:

Writing into an HTML element, using innerHTML.
Writing into the HTML output using document.write().
Writing into an alert box, using window.alert().
Writing into the browser console, using console.log().

  Using innerHTML:
To access an HTML element, JavaScript can use the document.getElementById(id) method.
(if you click anything it will be give some content what you give)
Changing the innerHTML property of an HTML element is a common way to display data in HTML.

Using document.write():
For testing purposes, it is convenient to use document.write():
Never call document.write after the document has finished loading. It will overwrite the whole document.
Using document.write() after an HTML document is loaded, will delete all existing HTML:
The document.write() method should only be used for testing.

Using window.alert():
You can use an alert box to display data on window.
You can skip the window keyword.
In JavaScript, the window object is the global scope object.
This means that variables, properties, and methods by default belong to the window object.
This also means that specifying the window keyword is optional

Using console.log():
For debugging purposes, you can call the console.log() method in the browser to display data.

JavaScript Print
JavaScript does not have any print object or print methods.
You cannot access output devices from JavaScript.
The only exception is that you can call the window.print() method in the browser 
to print the content of the current window.
----------------------------------------------------------------------------------------------------------------------------------------

JavaScript Statements:-
Example:
let x, y, z;    // Statement 1
x = 5;          // Statement 2
y = 6;          // Statement 3
z = x + y;      // Statement 4
  
A computer program is a list of "instructions" to be "executed" by a computer.
In a programming language, these programming instructions are called statements.
A JavaScript program is a list of programming statements.
In HTML, JavaScript programs are executed by the web browser.

JavaScript statements are composed of:
Values, Operators, Expressions, Keywords, and Comments.

  document.getElementById("demo").innerHTML = "Hello Dolly.";
This statement tells the browser to write "Hello Dolly." inside an HTML element with id="demo":

A JavaScript program is a sequence of statements.
Each statement is an instruction for the computer to do something.
The statements are executed, one by one, in the same order as they are written.
JavaScript programs (and JavaScript statements) are often called JavaScript code.

Semicolons ;
Semicolons separate JavaScript statements.
Add a semicolon at the end of each executable statement:
Examples
let a, b, c; 
a = 5;        
b = 6;        
c = a + b;
When separated by semicolons, multiple statements on one line are allowed:
a = 5; b = 6; c = a + b;

JavaScript White Space:
 You can add white space to your script to make it more readable.
JavaScript ignores multiple spaces.
If a JavaScript statement does not fit on one line, the best place to break it is after an operator (like =)

JavaScript Code Blocks:
JavaScript statements can be grouped together in code blocks, inside curly brackets {...}.
The purpose of code blocks is to define statements to be executed together.

One place you will find statements grouped together in blocks, is in JavaScript functions:
Example
function myFunction() {
  document.getElementById("demo1").innerHTML = "Hello Dolly!";
  document.getElementById("demo2").innerHTML = "How are you?";
}
-------------------------------------------------------------------------------------------------------------------------------

  JavaScript Variables:-
  Variables are Containers for Storing Data

JavaScript Variables can be declared in 4 ways:
Automatically
Using var
Using let
Using const

The var keyword was used in all JavaScript code from 1995 to 2015.
The let and const keywords were added to JavaScript in 2015.
The var keyword should only be used in code written for older browsers.
EXAMPLE:
const price1 = 5;
const price2 = 6;
let total = price1 + price2;
The two variables price1 and price2 are declared with the const keyword.
These are constant values and cannot be changed.
The variable total is declared with the let keyword.
The value total can be changed.

When to Use var, let, or const?
1. Always declare variables
2. Always use const if the value should not be changed
3. Always use const if the type should not be changed (Arrays and Objects)
4. Only use let if you can't use const.
5. Only use var if you MUST support old browsers.


















  
